
server.port=8080

#数据库连接配置
#数据源基本配置
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/prodpms?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#数据源其他配置
spring.datasource.initialSize: 5
spring.datasource.minIdle: 5
spring.datasource.maxActive: 20
spring.datasource.maxWait: 60000
spring.datasource.timeBetweenEvictionRunsMillis: 60000
spring.datasource.minEvictableIdleTimeMillis: 300000
spring.datasource.validationQuery: SELECT 1 FROM DUAL
spring.datasource.testWhileIdle: true
spring.datasource.testOnBorrow: false
spring.datasource.testOnReturn: false
spring.datasource.poolPreparedStatements: true
#配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙  
spring.datasource.filters: stat,wall,log4j
spring.datasource.maxPoolPreparedStatementPerConnectionSize: 20
spring.datasource.useGlobalDataSourceStat: true  
spring.datasource.connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
# 配置pageHelper分页插件的内容
pagehelper.helper-dialect=mysql
#分页合理化参数，默认值为false。当该参数设置为 true时，pageNum<=0时会查询第一页，pageNum>pages（超过总数时），会查询最后一页
pagehelper.reasonable=true 
pagehelper.support-methods-arguments=true
pagehelper.params=count=countSql


#设置项目ContextPath
#server.context-path=/
#设置Tomcat编码
#server.tomcat.uri-encoding=UTF-8


#mybatis
mybatis_config_file=mybatis-config.xml
#数据库
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
#指定数据库类型
spring.jpa.database=mysql
#控制台打印sql
spring.jpa.show-sql=true

#配置.xml文件路径
mybatis.mapper-locations=classpath:mapper/*.xml
#mybatis.mapper-locations=mapper/*.xml
#实体类采用驼峰命名。配置后无需写resultMapper将数据库字段和实体类属性对应
#mybatis.configuration.mapUnderscoreToCamelCase=true
#mybatis.configuration.map-underscore-to-camel-case=true
#两种开发模式二选一即可
#配置模型路径
mybatis.type-aliases-package=com.ccb.ProdPms.entity
#打印sql到控制台
logging.level.com.ccb.ProdPms.mapper=debug


#search multipart
spring.http.multipart.max-file-size=20MB
spring.http.multipart.max-request-size=100MB
#spring.http.multipart.enabled=true #\u9ED8\u8BA4\u652F\u6301\u6587\u4EF6\u4E0A\u4F20.
#spring.http.multipart.file-size-threshold=0 #\u652F\u6301\u6587\u4EF6\u5199\u5165\u78C1\u76D8.
#spring.http.multipart.location= # \u4E0A\u4F20\u6587\u4EF6\u7684\u4E34\u65F6\u76EE\u5F55
#spring.http.multipart.max-file-size=1Mb # \u6700\u5927\u652F\u6301\u6587\u4EF6\u5927\u5C0F
#spring.http.multipart.max-request-size=10Mb # \u6700\u5927\u652F\u6301\u8BF7\u6C42\u5927\u5C0F

#静态页面的访问配置
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html
#spring.thymeleaf.mode=HTML5

#静态资源文件处理(这是读取静态资源所在路径的一种通过配置文件的方式，还有一种写在config目录下，两者二选一即可)
#spring.mvc.static-path-pattern=/**
#http:
#location: F://preview
spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/
spring.mvc.view.suffix=.html
